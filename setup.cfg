[metadata]
name = metron_talker
description = A Metron API talker for ComicTagger a cross-platform GUI/CLI app for writing metadata to comic archives
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/comictagger/metron_talker
author = ComicTagger team
author_email = comictagger@gmail.com
license = Apache License 2.0
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Environment :: MacOS X
    Environment :: Plugins
    Environment :: Win32 (MS Windows)
    Environment :: X11 Applications :: Qt
    Intended Audience :: End Users/Desktop
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Topic :: Multimedia :: Graphics
    Topic :: Other/Nonlisted Topic
    Topic :: Utilities
keywords =
    comictagger
    metron
    metron.cloud
    comics
    comic
    metadata
    tagging
    tagger

[options]
packages = find:
install_requires =
    comictagger>=1.6.0a7
    mokkari>=2.5.0
python_requires = >=3.9

[options.packages.find]
exclude = tests; testing
src = metron_talker

[options.entry_points]
comictagger.talker =
    metron = metron_talker.metron:MetronTalker

[options.extras_require]
dev =
    black>=22
    flake8==4.*
    flake8-black
    flake8-encodings
    flake8-isort
    invoke
    isort>=5.10
    pytest==7.*
    setuptools>=42
    setuptools-scm[toml]>=3.4
    wheel

[tox:tox]
envlist = py3.9

[testenv]
deps = -requirements-dev.txt
commands =
    coverage erase
    coverage run -m pytest {posargs:tests}
    coverage report

[testenv:wheel]
description = Generate wheel and tar.gz
labels =
    release
    build
skip_install = true
deps =
    build
commands_pre =
    -python -c 'import shutil,pathlib; \
    shutil.rmtree("./build/", ignore_errors=True); \
    shutil.rmtree("./dist/", ignore_errors=True)'
commands =
    python -m build

[testenv:pypi-upload]
description = Upload wheel to PyPi
platform = Linux
labels =
    release
skip_install = true
depends = wheel
deps =
    twine
passenv =
    TWINE_*
setenv =
    TWINE_NON_INTERACTIVE=true
commands =
    python -m twine upload dist/*.whl dist/*.tar.gz

[pep8]
ignore = E265,E501
max_line_length = 120

[flake8]
extend-ignore = E501, A003
max_line_length = 120
per-file-ignores =
    *_test.py: LN001

[coverage:run]
plugins = covdefaults

[coverage:report]
fail_under = 95

[mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[mypy-testing.*]
disallow_untyped_defs = false

[mypy-tests.*]
disallow_untyped_defs = false
